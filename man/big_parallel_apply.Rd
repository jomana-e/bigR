% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/big_parallel_apply.R
\name{big_parallel_apply}
\alias{big_parallel_apply}
\title{Apply a function to a dataset using parallel computing}
\usage{
big_parallel_apply(data, FUN, n_cores = parallel::detectCores())
}
\arguments{
\item{data}{A dataframe}

\item{FUN}{Function to apply}

\item{n_cores}{Number of CPU cores to use}
}
\value{
Processed dataframe
}
\description{
Apply a function to a dataset using parallel computing
}
\examples{
\dontrun{
# Define a computationally expensive function
expensive_fun <- function(df) {
  df$result <- sapply(df$value, function(x) {
    Sys.sleep(0.1)  # Simulate expensive computation
    return(x^2)
  })
  return(df)
}

# Apply the function in parallel
result <- big_parallel_apply(data, expensive_fun)

# Specify number of cores explicitly
result <- big_parallel_apply(data, expensive_fun, n_cores = 4)

# Complex data transformation
transform_fun <- function(df) {
  df \%>\%
    dplyr::mutate(
      scaled = scale(value),
      category = cut(value, breaks = 10)
    )
}
result <- big_parallel_apply(data, transform_fun)
}
}
